#pragma once

enum ControlPrameter {
	INITIAL_CAMERA, START_SIMULATION, ONE_FRAME, RESET_SIMULATION, STOP_AFTER_RELEASE_MOUSE, INITIAL_SIMULATION, SET_CURSOR_FORCE, OUTPUT_IMAGE, SAVE_OBJ, START_TEST, INITIAL_TEST
};

enum ObjectType {
	COLLIDER_, TETRAHEDRON_, CLOTH_
};

enum PDFuncSendToThread {
    LOCAL_PROJECTION, CONSTRUCT_B, UPDATE_UV, UPDATE_MATRIX, //LOCAL_EDGE_LENGTH_PROJECTION,
    COLLISION_FREE_POSITION, CONSTRUCT_B_WITHOUT_COLLISION,
    LOCAL_PROJECTION_WITHOUT_ENERGY, COMPUTE_ENERGY,
    SOLVE_WITH_COLLISION, SOLVE_WITHOUT_COLLISION,
    TEST_LOCAL_PROJECTION, COMPUTE_DISPLACEMENT,
    PREPARE_WOODBURY, SET_K_COLUMN, FACTORIZE_WOODBURY_K,
    UPDATE_COLLISION_STIFFNESS, VIRTUAL_LOCAL_PROJECTION, SOLVE_VIRTUAL_SYSYTEM, UPDATE_VIRTUAL_UV, UPDATE_U_FROM_VIRTUAL, GET_FRICTION
};
enum SpatialHashingFuncSendToThread {
    TRIANGLE_HASHING, SCENE_AABB, SET_HASH_TOGETHER
};

enum CollisionFuncSendToThread {
    FIND_TRIANGLE_PAIRS, FIND_PRIMITIVE_AROUND, 
    GLOBAL_COLLISION_TIME, COLLISION_CONSTRAINT,
    GLOBAL_COLLISION_DETECTION, SUM_TARGET_POSITION, RE_DETECTION, RESUM_TARGET_POSITION
};

enum MeshStructFuncSendToThread {
    FACE_NORMAL, VERTEX_NORMAL, FACE_NORMAL_RENDER, VERTEX_NORMAL_RENDER, SET_VOLUME
};
enum MeshStructType {
    TRIANGLE, TETRAHEDRON
};

enum Iteration {
    LOCAL_GLOBAL, OUTER
};

enum StiffnessType {
    BODY_POINT_TRIANGLE, SELF_POINT_TRIANGLE, SELF_EDGE_EDGE, SELF_POINT_POINT, LENGTH, BENDING
};

enum SetStiffness {
    START_SETTING, STIFFNESS_CONFIRMED, EDIT, EDIT_LENGTH, EDIT_BENDING, EDIT_COLLISION, EDIT_BODY_POINT_TRIANGLE, EDIT_SELF_POINT_TRIANGLE, EDIT_SELF_EDGE_EDGE, EDIT_SELF_POINT_POINT
};

enum ObjectFunc {
    VERTEX_AABB, EDGE_TRIANGLE_AABB //TRIANGLE_AABB, EDGE_AABB,
};

enum BVHFunc {
    CAL_CENTER, CAL_MORTON
};

enum RadixSortFunc {
    SET_COUNT_BUCKET, REORDER, MORTON_REORDER, SET_COUNT_BUCKET_MORTON
};

enum IterationMethodFunc {
    JACOBI_ITR, A_JACOBI_2_ITR, A_JACOBI_3_ITR, CHEBYSHEV_JACOBI_ITR, CHEBYSHEV_A_JACOBI_2_ITR, 
    CHEBYSHEV_A_JACOBI_3_ITR, PCG_ITR1, PCG_ITR2, GAUSS_SEIDEL_ITR, CHEBYSHEV_GAUSS_SEIDEL_ITR,
    UPDATE_JACOBI_OPERATOR, UPDATE_2_A_JACOBI_ITR_MATRIX, UPDATE_3_A_JACOBI_ITR_MATRIX
};


enum ItrSolverMethod {
    DIRECT_SOLVE, JACOBI, CHEBYSHEV_JACOBI, SUPER_JACOBI, CHEBYSHEV_SUPER_JACOBI, GAUSS_SEIDEL, PCG, GAUSS_SEIDEL_CHEBYSHEV,WEIGHTED_JACOBI,
};